{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar incrmmean = require( '@stdlib/stats-incr-mmean' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a moving arithmetic mean of absolute values.\n*\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} must provide a positive integer\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmmeanabs( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator( 3.0 );\n* // returns ~3.33\n*\n* mu = accumulator( 5.0 );\n* // returns ~4.33\n*\n* mu = accumulator();\n* // returns ~4.33\n*/\nfunction incrmmeanabs( W ) {\n\tvar mean;\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( '0e88T', W ) );\n\t}\n\tmean = incrmmean( W );\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean. If not provided a value, the accumulator function returns the current mean.\n\t*\n\t* @private\n\t* @param {number} [x] - input value\n\t* @returns {(number|null)} mean or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\treturn mean( abs( x ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a moving arithmetic mean of absolute values incrementally.\n*\n* @module @stdlib/stats-incr-mmeanabs\n*\n* @example\n* var incrmmeanabs = require( '@stdlib/stats-incr-mmeanabs' );\n*\n* var accumulator = incrmmeanabs( 3 );\n*\n* var mu = accumulator();\n* // returns null\n*\n* mu = accumulator( 2.0 );\n* // returns 2.0\n*\n* mu = accumulator( -5.0 );\n* // returns 3.5\n*\n* mu = accumulator( 3.0 );\n* // returns ~3.33\n*\n* mu = accumulator( 5.0 );\n* // returns ~4.33\n*\n* mu = accumulator();\n* // returns ~4.33\n*/\n\n// MODULES //\n\nvar incrmmeanabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmmeanabs;\n"],"names":["isPositiveInteger","require$$0","isPrimitive","abs","require$$1","incrmmean","require$$2","format","require$$3","lib","W","mean","TypeError","x","arguments","length"],"mappings":";;qWAsBA,IAAIA,EAAoBC,EAAgDC,YACpEC,EAAMC,EACNC,EAAYC,EACZC,EAASC,EA2Db,IC5BAC,EDEA,SAAuBC,GACtB,IAAIC,EACJ,IAAMX,EAAmBU,GACxB,MAAM,IAAIE,UAAWL,EAAQ,QAASG,IAGvC,OADAC,EAAON,EAAWK,GAUlB,SAAsBG,GACrB,GAA0B,IAArBC,UAAUC,OACd,OAAOJ,IAER,OAAOA,EAAMR,EAAKU"}